{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport canUseDom from './canUseDom';\nvar MARK_KEY = \"rc-util-key\";\n\nfunction getContainer(option) {\n  if (option.attachTo) {\n    return option.attachTo;\n  }\n\n  var head = document.querySelector('head');\n  return head || document.body;\n}\n\nexport function injectCSS(css) {\n  var _option$csp;\n\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!canUseDom()) {\n    return null;\n  }\n\n  var styleNode = document.createElement('style');\n\n  if ((_option$csp = option.csp) === null || _option$csp === void 0 ? void 0 : _option$csp.nonce) {\n    var _option$csp2;\n\n    styleNode.nonce = (_option$csp2 = option.csp) === null || _option$csp2 === void 0 ? void 0 : _option$csp2.nonce;\n  }\n\n  styleNode.innerHTML = css;\n  var container = getContainer(option);\n  var firstChild = container.firstChild;\n\n  if (option.prepend && firstChild) {\n    container.insertBefore(styleNode, firstChild);\n  } else {\n    container.appendChild(styleNode);\n  }\n\n  return styleNode;\n}\nvar containerCache = new Map();\nexport function updateCSS(css, key) {\n  var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var container = getContainer(option); // Get real parent\n\n  if (!containerCache.has(container)) {\n    var placeholderStyle = injectCSS('', option);\n    var parentElement = placeholderStyle.parentElement;\n    containerCache.set(container, parentElement);\n    parentElement.removeChild(placeholderStyle);\n  }\n\n  var existNode = _toConsumableArray(containerCache.get(container).children).find(function (node) {\n    return node.tagName === 'STYLE' && node[MARK_KEY] === key;\n  });\n\n  if (existNode) {\n    var _option$csp3, _option$csp4;\n\n    if (((_option$csp3 = option.csp) === null || _option$csp3 === void 0 ? void 0 : _option$csp3.nonce) && existNode.nonce !== ((_option$csp4 = option.csp) === null || _option$csp4 === void 0 ? void 0 : _option$csp4.nonce)) {\n      var _option$csp5;\n\n      existNode.nonce = (_option$csp5 = option.csp) === null || _option$csp5 === void 0 ? void 0 : _option$csp5.nonce;\n    }\n\n    if (existNode.innerHTML !== css) {\n      existNode.innerHTML = css;\n    }\n\n    return existNode;\n  }\n\n  var newNode = injectCSS(css, option);\n  newNode[MARK_KEY] = key;\n  return newNode;\n}","map":{"version":3,"sources":["/Users/rahulpatel/Desktop/chrome_extension/client/node_modules/rc-util/es/Dom/dynamicCSS.js"],"names":["_toConsumableArray","canUseDom","MARK_KEY","getContainer","option","attachTo","head","document","querySelector","body","injectCSS","css","_option$csp","arguments","length","undefined","styleNode","createElement","csp","nonce","_option$csp2","innerHTML","container","firstChild","prepend","insertBefore","appendChild","containerCache","Map","updateCSS","key","has","placeholderStyle","parentElement","set","removeChild","existNode","get","children","find","node","tagName","_option$csp3","_option$csp4","_option$csp5","newNode"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport canUseDom from './canUseDom';\nvar MARK_KEY = \"rc-util-key\";\n\nfunction getContainer(option) {\n  if (option.attachTo) {\n    return option.attachTo;\n  }\n\n  var head = document.querySelector('head');\n  return head || document.body;\n}\n\nexport function injectCSS(css) {\n  var _option$csp;\n\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!canUseDom()) {\n    return null;\n  }\n\n  var styleNode = document.createElement('style');\n\n  if ((_option$csp = option.csp) === null || _option$csp === void 0 ? void 0 : _option$csp.nonce) {\n    var _option$csp2;\n\n    styleNode.nonce = (_option$csp2 = option.csp) === null || _option$csp2 === void 0 ? void 0 : _option$csp2.nonce;\n  }\n\n  styleNode.innerHTML = css;\n  var container = getContainer(option);\n  var firstChild = container.firstChild;\n\n  if (option.prepend && firstChild) {\n    container.insertBefore(styleNode, firstChild);\n  } else {\n    container.appendChild(styleNode);\n  }\n\n  return styleNode;\n}\nvar containerCache = new Map();\nexport function updateCSS(css, key) {\n  var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var container = getContainer(option); // Get real parent\n\n  if (!containerCache.has(container)) {\n    var placeholderStyle = injectCSS('', option);\n    var parentElement = placeholderStyle.parentElement;\n    containerCache.set(container, parentElement);\n    parentElement.removeChild(placeholderStyle);\n  }\n\n  var existNode = _toConsumableArray(containerCache.get(container).children).find(function (node) {\n    return node.tagName === 'STYLE' && node[MARK_KEY] === key;\n  });\n\n  if (existNode) {\n    var _option$csp3, _option$csp4;\n\n    if (((_option$csp3 = option.csp) === null || _option$csp3 === void 0 ? void 0 : _option$csp3.nonce) && existNode.nonce !== ((_option$csp4 = option.csp) === null || _option$csp4 === void 0 ? void 0 : _option$csp4.nonce)) {\n      var _option$csp5;\n\n      existNode.nonce = (_option$csp5 = option.csp) === null || _option$csp5 === void 0 ? void 0 : _option$csp5.nonce;\n    }\n\n    if (existNode.innerHTML !== css) {\n      existNode.innerHTML = css;\n    }\n\n    return existNode;\n  }\n\n  var newNode = injectCSS(css, option);\n  newNode[MARK_KEY] = key;\n  return newNode;\n}"]},"metadata":{},"sourceType":"module"}