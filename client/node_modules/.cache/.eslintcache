[{"/Users/rahulpatel/Desktop/chrome_extension/client/src/index.js":"1","/Users/rahulpatel/Desktop/chrome_extension/client/src/App.js":"2","/Users/rahulpatel/Desktop/chrome_extension/client/src/reportWebVitals.js":"3","/Users/rahulpatel/Desktop/chrome_extension/client/src/components/PreferenceModal.js":"4","/Users/rahulpatel/Desktop/chrome_extension/client/src/components/LoginPage.js":"5"},{"size":500,"mtime":1617498192018,"results":"6","hashOfConfig":"7"},{"size":2729,"mtime":1619491705277,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1617498192019,"results":"9","hashOfConfig":"7"},{"size":1693,"mtime":1619056520081,"results":"10","hashOfConfig":"7"},{"size":1054,"mtime":1619664344913,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10b1bjq",{"filePath":"14","messages":"15","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rahulpatel/Desktop/chrome_extension/client/src/index.js",[],"/Users/rahulpatel/Desktop/chrome_extension/client/src/App.js",["24","25","26","27","28","29","30"],"import React from \"react\";\nimport LoginPage from './components/LoginPage'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Setting from \"./assets/cog-solid.svg\";\nimport PreferenceModal from \"./components/PreferenceModal\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [isPreferenceVisible, showPreferenceModal] = useState(false);\n  let [minute, setMinute] = useState(new Date().getMinutes());\n  let [finalMinute, setFinalMinute] = useState(minute);\n  let [preferences, setPreference] = useState([\n    {\n      name: \"background\",\n      prefer: true,\n    },\n    {\n      name: \"dark\",\n      prefer: true,\n    },\n    {\n      name: \"nature\",\n      prefer: true,\n    },\n    {\n      name: \"tropical\",\n      prefer: true,\n    },\n    {\n      name: \"skyscrapper\",\n      prefer: true,\n    },\n    {\n      name: \"night\",\n      prefer: true,\n    },\n    {\n      name: \"mountains\",\n      prefer: true,\n    },\n    {\n      name: \"Sky\",\n      prefer: false,\n    },\n    {\n      name: \"ocean\",\n      prefer: true,\n    },\n    {\n      name: \"dark\",\n      prefer: true,\n    },\n  ]);\n\n  const handlePreference = () => {\n    showPreferenceModal(!isPreferenceVisible);\n  };\n\n  setInterval(function () {\n    setMinute(new Date().getMinutes());\n    if (minute < 10) {\n      setFinalMinute(\"0\" + minute);\n    } else {\n      setFinalMinute(minute);\n    }\n  }, 10000);\n\n  useEffect(() => {\n    getUnsplashData();\n  }, [preferences]);\n\n  let getUnsplashData = () => {\n    fetch(\n      `https://source.unsplash.com/featured/${window.innerWidth}x${\n        window.innerHeight\n      }/?${preferences.join()}`\n    )\n      .then((res) => {\n        window.document.querySelector(\n          \"#imgg\"\n        ).style.background = `url(${res.url})`;\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <Router >\n      <Switch>\n      <Route exact path=\"/\">\n    <div className=\"App\" style={{ background: \"#f0f0f0\" }}>\n      <PreferenceModal\n        modalVisible={isPreferenceVisible}\n        preferences={preferences}\n      />\n      <header\n        id=\"imgg\"\n        style={{\n          width: \"100vw\",\n          height: \"100vh\",\n          position: \"absolute\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <span\n          className=\"\"\n          style={{ fontSize: \"10rem\", color: \"white\", fontWeight: \"700\" }}\n        >\n          {new Date().getHours()}:{minute}\n        </span>\n      </header>\n        </div>\n        </Route>\n        <Route path=\"/login\" exact>\n          <LoginPage />\n        </Route>\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/rahulpatel/Desktop/chrome_extension/client/src/reportWebVitals.js",[],"/Users/rahulpatel/Desktop/chrome_extension/client/src/components/PreferenceModal.js",["31","32","33"],"import React, { useState } from \"react\";\nimport { Switch, Modal, Button, Checkbox } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport Setting from \"../assets/cog-solid.svg\";\n\nconst PreferenceModal = ({ preferences }) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n  const handlePreference = (value) => {\n\n    \n    let preferenceIndex = preferences.findIndex(x => x.name == value.name);\n    preferences[preferenceIndex].prefer = !preferences[preferenceIndex].prefer;\n    console.log(preferences[preferenceIndex])\n  };\n\n  return (\n    <>\n      <button\n        style={{ height: \"30px\", width: \"30px\" }}\n        className=\"absolute p-1 flex ml-98 z-50\"\n        onClick={showModal}\n      >\n        <img alt=\"Preference\" src={Setting} />\n      </button>\n      <Modal\n        className=\"z-50\"\n        title=\"Preferences\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <div className=\"grid grid-cols-2\">\n          {preferences.map((value) => (\n            <div className=\"flex justify-between mr-24 pb-2\">\n              <label>\n                {value.name.charAt(0).toUpperCase()}\n                {value.name.slice(1)}\n              </label>\n              <Switch\n                className=\"w-1\"\n                // defaultChecked={value.prefer}\n                onChange={() => handlePreference(value)}\n              />\n            </div>\n          ))}\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default PreferenceModal;\n","/Users/rahulpatel/Desktop/chrome_extension/client/src/components/LoginPage.js",[],{"ruleId":"34","severity":1,"message":"35","line":3,"column":50,"nodeType":"36","messageId":"37","endLine":3,"endColumn":54},{"ruleId":"34","severity":1,"message":"38","line":4,"column":8,"nodeType":"36","messageId":"37","endLine":4,"endColumn":12},{"ruleId":"34","severity":1,"message":"39","line":6,"column":8,"nodeType":"36","messageId":"37","endLine":6,"endColumn":15},{"ruleId":"34","severity":1,"message":"40","line":13,"column":8,"nodeType":"36","messageId":"37","endLine":13,"endColumn":19},{"ruleId":"34","severity":1,"message":"41","line":14,"column":21,"nodeType":"36","messageId":"37","endLine":14,"endColumn":34},{"ruleId":"34","severity":1,"message":"42","line":57,"column":9,"nodeType":"36","messageId":"37","endLine":57,"endColumn":25},{"ruleId":"43","severity":1,"message":"44","line":72,"column":6,"nodeType":"45","endLine":72,"endColumn":19,"suggestions":"46"},{"ruleId":"34","severity":1,"message":"47","line":2,"column":25,"nodeType":"36","messageId":"37","endLine":2,"endColumn":31},{"ruleId":"34","severity":1,"message":"48","line":2,"column":33,"nodeType":"36","messageId":"37","endLine":2,"endColumn":41},{"ruleId":"49","severity":1,"message":"50","line":22,"column":61,"nodeType":"51","messageId":"52","endLine":22,"endColumn":63},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'Setting' is defined but never used.","'finalMinute' is assigned a value but never used.","'setPreference' is assigned a value but never used.","'handlePreference' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUnsplashData'. Either include it or remove the dependency array.","ArrayExpression",["53"],"'Button' is defined but never used.","'Checkbox' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"54","fix":"55"},"Update the dependencies array to be: [getUnsplashData, preferences]",{"range":"56","text":"57"},[1500,1513],"[getUnsplashData, preferences]"]